#config_version=5
##! mode: saw_qualify
mode:
  start_events: ball_starting
  priority: 120

shots:
  shot_left_return_lane:
    advance_events: shot_left_return_lane_saw_qualify_profile_lit_hit 
    switches: s_left_inlane
    profile: saw_qualify_profile
    show_tokens:
      leds: l_left_return_lane
    control_events:
      - events: ball_starting
        state: 2
  shot_left_loop:
    advance_events: shot_left_loop_saw_qualify_profile_lit_hit 
    reset_events: slide_trapcomplete_removed, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped   
    switches: s_left_loop_bottom, s_left_loop_top
    profile: saw_qualify_profile
    show_tokens:
      leds: l_left_loop_arrow
  shot_left_standup:
    advance_events: shot_left_standup_saw_qualify_profile_lit_hit  
    reset_events: slide_trapcomplete_removed, sg_saw_reset_complete, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped    
    switches: s_left_standup
    profile: saw_qualify_profile
    show_tokens:
      leds: l_left_standup_arrow
  shot_inner_loop:
    advance_events: shot_inner_loop_saw_qualify_profile_lit_hit  
    reset_events: slide_trapcomplete_removed, sg_saw_reset_complete, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped 
    switches: s_inner_loop
    profile: saw_qualify_profile
    show_tokens:
      leds: l_inner_loop_arrow
  shot_left_standup_rightramp:
    advance_events: shot_left_standup_rightramp_saw_qualify_profile_lit_hit  
    reset_events: slide_trapcomplete_removed, sg_saw_reset_complete, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped 
    switches: s_left_standup_right_ramp
    profile: saw_qualify_profile
    show_tokens:
      leds: l_left_standup_right_ramp_arrow
  shot_right_standup_rightramp:
    advance_events: shot_right_standup_rightramp_saw_qualify_profile_lit_hit
    reset_events: slide_trapcomplete_removed, sg_saw_reset_complete, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped   
    switches: s_right_standup_right_ramp
    profile: saw_qualify_profile
    show_tokens:
      leds: l_right_standup_right_ramp_arrow
  shot_right_loop:
    advance_events: shot_right_loop_saw_qualify_profile_lit_hit
    reset_events: slide_trapcomplete_removed, sg_saw_reset_complete, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped    
    switches: s_right_loop_bottom, s_right_loop_top
    profile: saw_qualify_profile
    show_tokens:
      leds: l_right_loop_arrow
  shot_right_standup:
    advance_events: shot_right_standup_saw_qualify_profile_lit_hit
    reset_events: slide_trapcomplete_removed, sg_saw_reset_complete, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped   
    switches: s_right_standup
    profile: saw_qualify_profile
    show_tokens:
      leds: l_right_standup_arrow


shot_profiles:
  saw_qualify_profile:
    advance_on_hit: false
    states:
      - name: lit
        show: "shot_on"           # a default show to turn of the led. change if you want to do something on unlit shots
      - name: collected
        show: "off"               # a default show to turn of the led. change if you want to do something on unlit shots
      - name: subtract
        show: "shot_subtract"      # our show to indicate an lit shot
    state_names_to_not_rotate: subtract


shot_groups:
  sg_saw_qualify:
    shots: shot_left_return_lane, shot_left_loop, shot_left_standup, shot_inner_loop, shot_left_standup_rightramp, shot_right_standup_rightramp, shot_right_loop, shot_right_standup
  sg_saw_reset:
    shots: shot_left_loop, shot_left_standup, shot_inner_loop, shot_left_standup_rightramp, shot_right_standup_rightramp, shot_right_loop, shot_right_standup


shows:
  shot_on:    # define our show to indicate the state
    - duration: -1      # this show step will run permanently
      lights:     # turn the light purple
        (leds): white
  shot_subtract:    # define our show to indicate the state
    - duration: -1      # this show step will run permanently
      lights:     # turn the light purple
        (leds): red
  shot_hit:    # define our show to communicate success to the player
    - duration: 1s      # this show step lasts 1s
        # add sounds here or videos
        # add scoring here
      shows:      # run another (built-in) show to flash the light
        flash_color:
          show_tokens:
            color: white
            leds: (leds)
          speed: 4

  saw_qualify_complete:    # define our show to communicate success on completing all shots
    - duration: 1s
        # add scoring, sounds and video
      shows:
        flash_color:
          priority: 10     # higher priority as the shots
          show_tokens:
            color: red
            leds: l_left_return_lane, l_left_standup_arrow, l_left_loop_arrow, l_inner_loop_arrow, l_left_standup_right_ramp_arrow, l_right_standup_right_ramp_arrow, l_right_loop, l_right_standup_arrow
          speed: 4

show_player:
   # play a show once a each shot is lit
  shot_left_return_lane_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_left_standup_arrow
      loops: 1
  shot_left_loop_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_left_loop_arrow
      loops: 1
  shot_left_standup_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_left_standup_arrow
      loops: 1
  shot_inner_loop_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_inner_loop_arrow
      loops: 1
  shot_left_standup_rightramp_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_left_standup_right_ramp_arrow
      loops: 1
  shot_right_standup_rightramp_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_right_standup_right_ramp_arrow
      loops: 1
  shot_right_loop_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_right_loop_arrow
      loops: 1
  shot_right_standup_hit{state=="lit"}:
    shot_hit:
      show_tokens:
        leds: l_right_standup_arrow
      loops: 1
   # play a show when the group completes
  sg_saw_qualify_complete{state=="lit"}:
    saw_qualify_complete:
      loops: 0

event_player:
  sg_saw_qualify_subtract_hit{device.counters.saw_qualify_counter.value > 0}:
    - subtract_a_saw_letter

counters:
  saw_qualify_counter:
    starting_count: 0
    count_complete_value: 3
    enable_events: enable_qualify
    disable_events: disable_qualify
    start_enabled: true
#    persist_state: true
    reset_events:
      slide_trapcomplete_removed, mode_razorwire_stopped, mode_drillchair_stopped, mode_quadshotgun_stopped, mode_reversebeartrap_stopped, mode_zepstest_stopped, mode_flammablejelly_stopped
    disable_on_complete: false
    events_when_complete: saw_qualify_complete   
    count_events: sg_saw_qualify_lit_hit
    control_events:
      - event: subtract_a_saw_letter
        action: subtract
        value: 1

slides:    
  s_collect:
    widgets:
    - type: video
      video: s_collect   
  sa_collect:
    widgets:
    - type: video
      video: sa_collect 
  saw_collect:
    widgets:
    - type: video
      video: saw_collect
  sa_subtract:
    widgets:
    - type: video
      video: sa_subtract
  s_subtract:
    widgets:
    - type: video
      video: s_subtract     
    
slide_player:
  logicblock_saw_qualify_counter_updated{value==1}:
    s_collect:
      priority: 190
      expire: 3s
  logicblock_saw_qualify_counter_updated{value==2}:
    sa_collect:
      priority: 190
      expire: 3s
  logicblock_saw_qualify_counter_updated{value==3}:
    saw_collect:
      priority: 190
      expire: 3s         
  sg_saw_qualify_subtract_hit{device.counters.saw_qualify_counter.value==1}:
    s_subtract:
      priority: 185
      expire: 3s
  sg_saw_qualify_subtract_hit{device.counters.saw_qualify_counter.value==2}:
    sa_subtract:
      priority: 185
      expire: 3s
